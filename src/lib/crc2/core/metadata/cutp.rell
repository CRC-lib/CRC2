@extend(cutp.get_cutp_features)
function (): list<text> {
    return list<text>([basic_v1.CUTP_TOKEN_DATA]);
}

@extend(basic_v1.cutp_impl_token_data)
function (
    proto: text,
    token_id: text,
    requested_data: set<text>
): map<text, gtv>? {
    if (proto != cutp.CRC) {
        return null;
    }
    val token = tokens.get_token(cutp.parse_token_id(token_id));
    val metadata = get_metadata(token);
    if (empty(requested_data)) return metadata;

    val filtered_data = map<text, gtv>();
    for (data in metadata.keys()) {
        if (requested_data.contains(data)) {
            filtered_data[data] = metadata.get(data);
        }
    }
    return filtered_data;
}
